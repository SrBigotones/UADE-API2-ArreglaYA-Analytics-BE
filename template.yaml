AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ArreglaYA Metrics BE - Express on Lambda + HTTP API

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_OPTIONS: "--enable-source-maps"
        STAGE: "prod"
        NODE_ENV: "production"

Resources:
  ExpressFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Resource:
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/arreglaya/analytics/*'
      CodeUri: .
      Handler: dist/lambda.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          STAGE: 'prod'
          NODE_ENV: 'production'
          DB_HOST: !Sub '{{resolve:ssm:/arreglaya/analytics/prod/db/host:1}}'
          DB_PORT: !Sub '{{resolve:ssm:/arreglaya/analytics/prod/db/port:1}}'
          DB_USERNAME: !Sub '{{resolve:ssm:/arreglaya/analytics/prod/db/username:1}}'
          DB_PASSWORD: !Sub '{{resolve:ssm:/arreglaya/analytics/prod/db/password:1}}'
          DB_DATABASE: !Sub '{{resolve:ssm:/arreglaya/analytics/prod/db/name:1}}'
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: ANY
            PayloadFormatVersion: "2.0"

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub 'https://${Api}.execute-api.${AWS::Region}.amazonaws.com'
  FunctionName:
    Description: "Lambda Function Name"
    Value: !Ref ExpressFunction
  Region:
    Description: "Region"
    Value: !Ref AWS::Region
