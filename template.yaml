AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ArreglaYA Metrics BE - Express on Lambda + HTTP API

Parameters:
  Stage:
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - stage

Conditions:
  IsProduction: !Equals [!Ref Stage, 'prod']

Globals:
  Function:
    Runtime: nodejs20.x
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_OPTIONS: "--enable-source-maps"
        STAGE: "prod"
        NODE_ENV: "production"

Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      DisableExecuteApiEndpoint: false

  ExpressFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Resource:
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/arreglaya/analytics/*'
        - AWSLambdaVPCAccessExecutionRole
      CodeUri: .
      Handler: dist/lambda-handler.handler
      Runtime: nodejs20.x
      Environment:
        Variables:
          STAGE: !Ref Stage
          NODE_ENV: !If [IsProduction, 'production', 'development']
          SSM_PATH_PREFIX: !Sub '/arreglaya/analytics/${Stage}/db'
      VpcConfig:
        SecurityGroupIds:
          - sg-06cb3c7cc1c6a444b
        SubnetIds:
          - subnet-0375b830ae4709b21
          - subnet-0a261e8ee3a674914
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Path: /{proxy+}
            Method: ANY
            PayloadFormatVersion: "2.0"

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com
  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt ExpressFunction.Arn
  Region:
    Description: "Region"
    Value: !Ref AWS::Region
